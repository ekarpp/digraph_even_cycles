diff --git a/Makefile b/Makefile
index 73187be..c214980 100644
--- a/Makefile
+++ b/Makefile
@@ -1,7 +1,7 @@
 SHELL := /bin/bash -O extglob
 
 CXX := g++
-CXXFLAGS := -g -std=c++1z -O3 -Wall -Wextra -march=native -fopenmp
+CXXFLAGS := -g -std=c++1z -O0 -Wall -Wextra -march=native -fopenmp
 LDFLAGS := -fopenmp
 
 VPATH = src:tests/unit:tests/perf
diff --git a/src/packed_fmatrix.hh b/src/packed_fmatrix.hh
index b4446d3..c0eb6e0 100644
--- a/src/packed_fmatrix.hh
+++ b/src/packed_fmatrix.hh
@@ -17,15 +17,16 @@
         uint64_t cmpmsk = 0b11 << (8*index);                    \
         for (int row = r0 + 1; row < this->rows; row++)         \
         {                                                       \
+            __m128i tmp_mx = _mm_max_epu16(this->get(row, col), mx);\
             uint64_t cmp = _mm_movemask_epi8(                   \
-                _mm_cmpgt_epi16(                                \
-                    this->get(row, col),                        \
+                _mm_cmpeq_epi16(                                \
+                    tmp_mx,                                     \
                     mx                                          \
                     )                                           \
                 );                                              \
             if (cmp & cmpmsk)                                   \
             {                                                   \
-                mx = this->get(row, col);                       \
+                mx = tmp_mx;                                    \
                 mxi = row;                                      \
             }                                                   \
         }                                                       \
@@ -56,6 +57,49 @@ private:
     int cols;
     std::valarray<__m128i> m;
 
+    void det_loop(int col, int index, uint64_t &det)
+    {
+        int r0 = 2*col + index;
+        __m128i mx = this->get(r0, col);
+        int mxi = r0;
+        uint64_t cmpmsk = 0b11 << (8*index);
+        for (int row = r0 + 1; row < this->rows; row++)
+        {
+            // avx512: _mm_cmpgt_epu16_mask
+            __m128i tmp_mx = _mm_max_epu16(this->get(row, col), mx);
+            uint64_t cmp = _mm_movemask_epi8(
+                _mm_cmpeq_epi16(
+                    tmp_mx,
+                    mx
+                )
+            );
+            if (~cmp & cmpmsk)
+            {
+                mx = this->get(row, col);
+                mxi = row;
+            }
+        }
+        uint64_t mx_ext = (index == 0)
+            ? _mm_extract_epi64(mx, 1)
+            : _mm_extract_epi64(mx, 0);
+//        if (mx_ext == 0)
+//            return global::F.zero();
+        if (mxi != r0)
+            this->swap_rows(mxi, r0);
+        det = global::F.rem(
+            global::F.clmul(det, mx_ext)
+            );
+        mx_ext = global::F.ext_euclid(mx_ext);
+        this->mul_row(r0, mx_ext);
+        for (int row = r0 + 1; row < this->rows; row++)
+        {
+            uint64_t val = (index == 0)
+                ? _mm_extract_epi64(this->get(row, col), 1)
+                : _mm_extract_epi64(this->get(row, col), 0);
+            this->row_op(r0, row, val);
+        }
+    }
+
     __m128i get(int row, int col)
     {
         return this->m[row*this->cols + col];
@@ -239,8 +283,8 @@ public:
         uint64_t det = 0x1;
         for (int col = 0; col < this->cols - (this->rows%2); col++)
         {
-            DET_LOOP(0);
-            DET_LOOP(1);
+            det_loop(col, 0, det);//DET_LOOP(0);
+            det_loop(col, 1, det);//DET_LOOP(1);
         }
         if (this->rows % 2)
         {
